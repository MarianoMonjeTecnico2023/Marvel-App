# 🦸‍♀️ Marvel Cards — Frontend (GitHub Pages)

Aplicación web que muestra tarjetas interactivas con los personajes del universo **Marvel**, incluyendo su nombre, imagen, primera aparición y descripción en **español** (gracias a un backend con integración Marvel + Wikipedia).

Frontend desarrollado en **HTML5, CSS3 y JavaScript puro**, optimizado para conectarse al backend hospedado en **Render**.

---

## 🚀 Tecnologías utilizadas

- **HTML5** — estructura principal de la app  
- **CSS3** — diseño responsive y modo oscuro elegante  
- **JavaScript (ES6+)** — conexión con la API y renderizado dinámico  
- **Fetch API** — consumo del backend en Render  
- **GitHub Pages** — despliegue del sitio estático  

---

## 📂 Estructura del proyecto

marvel-frontend/
│
├─ index.html # Página principal
├─ styles.css # Estilos generales
├─ main.js # Lógica de conexión y renderizado
└─ README.md # Documentación del proyecto

csharp
Copiar código

---

## ⚙️ Configuración de la conexión

En tu archivo `main.js`, asegurate de configurar la URL base del backend:

```js
// URL de tu backend en Render (reemplaza con tu dominio)
const API_URL = "https://tu-backend-render.onrender.com/api/characters";

// Ejemplo: buscar por nombre
async function buscarPersonajes(nombre) {
  const res = await fetch(`${API_URL}?q=${encodeURIComponent(nombre)}`);
  const data = await res.json();
  renderPersonajes(data.results);
}
⚠️ Importante: el backend debe estar online en Render antes de hacer pruebas locales o subir el sitio a GitHub Pages.

💅 Estilo visual
Las tarjetas utilizan un diseño moderno, minimalista y adaptable:

Modo oscuro automático

Sombras suaves y bordes redondeados

Transiciones en hover

Layout responsive (grid flexible)

Ejemplo visual:

Tarjeta	Ejemplo
🕷️ Spider-Man	

🌐 Publicación en GitHub Pages
1️⃣ Crear repositorio nuevo
En GitHub, crea un repositorio llamado por ejemplo:
marvel-frontend

2️⃣ Subir los archivos
Subí únicamente:

css
Copiar código
index.html
main.js
styles.css
README.md
3️⃣ Activar GitHub Pages
En tu repositorio:

Ir a Settings → Pages

En la sección Source, elegir Deploy from branch

Seleccionar la rama main o master

Carpeta raíz /

Guardar

GitHub generará tu sitio en unos minutos en:

arduino
Copiar código
https://tuusuario.github.io/marvel-frontend/
🔗 Ejemplo de flujo completo
Usuario abre tu web en GitHub Pages

La app hace fetch() al backend de Render:

arduino
Copiar código
https://marvel-backend.onrender.com/api/characters?q=Spider
El servidor devuelve los resultados (nombre, imagen, descripción).

El frontend muestra las tarjetas de los personajes con su información traducida.

🧠 Mejoras futuras (ideas opcionales)
🔍 Filtro avanzado: por cómic, año o saga

❤️ Favoritos locales: guardar personajes en localStorage

🌎 Multilenguaje: conmutar entre español e inglés

⚡ Lazy loading: para cargar imágenes progresivamente

🎨 Tema claro/oscuro manual

🧑‍💻 Autor
Mariano “Kenpachi” Monje
Frontend & Backend Developer

Proyecto experimental educativo — sin fines comerciales.

🛠️ Repos relacionados
🖥️ Backend: Marvel Cards API Proxy (Render)

🌐 Frontend: Marvel Cards Web (GitHub Pages)

yaml
Copiar código

---

💡 **Recomendación final:**  
Cuando termines el deploy del backend en Render, pasame la URL final (por ej. `https://marvel-backend.onr